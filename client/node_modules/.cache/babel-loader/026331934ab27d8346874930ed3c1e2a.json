{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN project\\\\Tourist-Guider\\\\client\\\\src\\\\thirdscreen\\\\ThirdScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport '../App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Clock from 'react-live-clock';\nimport { Link } from 'react-router-dom';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport CloudSharpIcon from '@material-ui/icons/CloudSharp';\nimport FlightTakeoffSharpIcon from '@material-ui/icons/FlightTakeoffSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThirdScreen = ({\n  match\n}) => {\n  _s();\n\n  ///////////////////////////////////////////////////////////\n  const url = useParams();\n  console.log(url.name, url.title, url.titleId, url.id);\n  const [Detail, setDetail] = useState([]);\n  let countryDetail = null;\n  useEffect(() => {\n    const fechData = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`/${url.name}`);\n        const a = Object.keys(data[url.titleId]);\n        var vue = data[url.titleId];\n        countryDetail = vue[`${a[5]}`].find(d => d._id === match.params.id);\n        setDetail(countryDetail);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fechData();\n  }, []);\n  console.log(Detail.name); //////////////////////////////////////////////\n  ////////////////<WEATHER>////////////////////\n\n  const [weather, setWeather] = useState('');\n  useEffect(() => {\n    const weatherInfo = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://api.openweathermap.org/data/2.5/weather?q=singrauli&units=metric&appid=b0ae0985edaf0e0b11f5fa2866865c79');\n        setWeather(data);\n        console.log(data.main.temp);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    weatherInfo();\n  }, []);\n  console.log(weather); //////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tt-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}; ////////////////////////////////////////////////////////////////:name/:title/:titleId/:details/:id/:weather\n\n\n_s(ThirdScreen, \"eQvb61uDLK8KmjG6h4NuH2T09ko=\", false, function () {\n  return [useParams];\n});\n\n_c = ThirdScreen;\nexport default ThirdScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThirdScreen\");","map":{"version":3,"sources":["D:/MERN project/Tourist-Guider/client/src/thirdscreen/ThirdScreen.js"],"names":["React","Col","Container","Row","LinkContainer","axios","useEffect","useState","useParams","Clock","Link","LocationOnIcon","HotelIcon","CloudSharpIcon","FlightTakeoffSharpIcon","ThirdScreen","match","url","console","log","name","title","titleId","id","Detail","setDetail","countryDetail","fechData","data","get","a","Object","keys","vue","find","d","_id","params","error","weather","setWeather","weatherInfo","main","temp"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport '../App.css'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router'\r\nimport Clock from 'react-live-clock';\r\nimport {Link} from 'react-router-dom'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport CloudSharpIcon from '@material-ui/icons/CloudSharp';\r\nimport FlightTakeoffSharpIcon from '@material-ui/icons/FlightTakeoffSharp';\r\n\r\n\r\nconst ThirdScreen = ({match}) => {\r\n\r\n///////////////////////////////////////////////////////////\r\n    const url = useParams()\r\n    console.log(url.name,url.title,url.titleId,url.id)\r\n    const [Detail, setDetail] = useState([])\r\n    let countryDetail = null\r\n    useEffect(() => {\r\n        const fechData = async() =>{\r\n            try {\r\n             const {data} = await axios.get(`/${url.name}`) \r\n             const a = Object.keys(data[url.titleId])\r\n             var vue = data[url.titleId]\r\n             countryDetail = vue[`${a[5]}`].find((d)=>d._id === match.params.id )\r\n             setDetail(countryDetail)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fechData()\r\n     }, [])\r\n     console.log(Detail.name)\r\n//////////////////////////////////////////////\r\n\r\n\r\n////////////////<WEATHER>////////////////////\r\n\r\nconst [weather, setWeather] = useState('')\r\n\r\nuseEffect(()=>{\r\n    const weatherInfo = async() =>{\r\n        try {\r\n            const {data} = await axios.get('https://api.openweathermap.org/data/2.5/weather?q=singrauli&units=metric&appid=b0ae0985edaf0e0b11f5fa2866865c79')\r\n            setWeather(data)\r\n            console.log(data.main.temp)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n    weatherInfo()\r\n},[])\r\n\r\nconsole.log(weather)\r\n\r\n//////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n    return (\r\n    <div className=\"tt\">\r\n        <div className=\"tt-body\">\r\n           <div className=\"\"></div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n////////////////////////////////////////////////////////////////:name/:title/:titleId/:details/:id/:weather\r\nexport default ThirdScreen\r\n"]},"metadata":{},"sourceType":"module"}